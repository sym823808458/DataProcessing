### Description: this script read in .xyz file generated by Lammps
###              and output the coordinate of the specific atom for every
###              frame.
### Usage: python xyz2Coordinate.py file.xyz steptime atom
### steptime - int, default is 1000step/ps 
### atom - element, default is Ni
### example: python xyz2Coordinate.py md.xyz 1000 Ni
### code by zmzeng12 20180308

#coding :utf-8

import re, math, sys

class xyz2Coordinate(object):

    def __init__(self, file2Process, step2time=1000, atom='Ni'):
        print('\nThe file to process is ' + file2Process )
        print('step of time is set to ' + str(step2time))
        print('atom is set to ' + atom +'\n')
        self.file2Process = file2Process;
        self.listOfTime = []
        self.listOfatom = []
        self.step2time = step2time # default is 2000step/ps
        self.atom = atom

    # get all Time and Zr, Ni coordinate in list
    def readFile(self):
        print('Read file...'+'\n')
        file = open(self.file2Process, 'r')
        line = file.readline()
        while line:
            if line.find('Timestep')!=-1:
                Timestep = int(line.split()[2])
                # convert timestep to time
                self.listOfTime.append(str(Timestep/int(self.step2time)))
            elif line.find(self.atom)!=-1: 
                self.listOfatom.append(line.split()[1:4])
            line = file.readline()
        file.close()
        print('Number of frames:' + str(len(self.listOfTime)) +'\n')
        print('Number of '+ self.atom + ':' + str(len(self.listOfatom)) +'\n')

    def coordinate2str(self, list):
        str = ''
        for i in list:
            str += i + '   '
        return str 

    # output all data
    def outputData(self):
        file = open(self.file2Process[0:-4] + '_Result.txt', 'w')
        file.write('Time (ps)    Coordinate (self.atom) (A)\n')
        for time, coordinate in zip(self.listOfTime, self.listOfatom):
            file.write(time + '    ' + self.coordinate2str(coordinate) + '\n')
        file.close()
        print('all done!')
        print('result is stored in ' + self.file2Process[0:-4] + '_Result.txt \n')

    # conver xyz to coordinate!
    def convert(self):
        self.readFile()
        self.outputData()

if __name__=='__main__':

    file2Process = sys.argv[1];
    step2time = sys.argv[2];
    atom = sys.argv[3];

    test = xyz2Coordinate(file2Process, step2time, atom)
    test.convert()

